{"version":3,"sources":["components/Header.js","components/SideMenu.js","App/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","backgroundColor","searchInput","opacity","padding","fontSize","Header","classes","AppBar","position","className","Toolbar","Grid","container","alignItems","item","InputBase","placeholder","startAdornment","sm","IconButton","Badge","badgeContent","color","withStyles","sideMenu","display","flexDirection","left","width","height","props","appMain","paddingLeft","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sVASMA,EAAYC,YAAW,CACzBC,KAAK,CACDC,gBAAiB,QAErBC,YAAY,CACRC,QAAS,MACTC,QAAS,UACTC,SAAU,SACV,UAAU,CACNJ,gBAAgB,cAKb,SAASK,IAEpB,IAAMC,EAAUT,IAEhB,OACI,cAACU,EAAA,EAAD,CAAQC,SAAS,SAASC,UAAWH,EAAQP,KAA7C,SACI,cAACW,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,WAAW,SAA3B,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAAV,SACI,cAACC,EAAA,EAAD,CACAC,YAAY,SACZP,UAAWH,EAAQL,YACnBgB,eAAgB,cAAC,IAAD,CAAYb,SAAS,cAGzC,cAACO,EAAA,EAAD,CAAMG,MAAI,EAACI,IAAE,IACb,eAACP,EAAA,EAAD,CAAMG,MAAI,EAAV,UACI,cAACK,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAOC,aAAc,EAAGC,MAAM,YAA9B,SACI,cAAC,IAAD,CAAuBlB,SAAS,cAGxC,cAACe,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAOC,aAAc,EAAGC,MAAM,UAA9B,SACI,cAAC,IAAD,CAAuBlB,SAAS,cAGxC,cAACe,EAAA,EAAD,UACI,cAAC,IAAD,CAAsBf,SAAS,sB,WCxB5CmB,cAtBA,CACXC,SAAS,CACLC,QAAS,OACTC,cAAe,SACflB,SAAU,WACVmB,KAAM,MACNC,MAAM,QACNC,OAAO,OACP7B,gBAAgB,YAcTuB,EATE,SAACO,GAAW,IACjBxB,EAAYwB,EAAZxB,QACR,OACI,qBAAKG,UAAWH,EAAQkB,cCf1B3B,G,MAAYC,YAAW,CAC3BiC,QAAS,CACPC,YAAY,QACZJ,MAAM,WAiBKK,MAbf,WACE,IAAM3B,EAAUT,IAChB,OACE,qCACE,cAAC,EAAD,IACA,qBAAKY,UAAWH,EAAQyB,QAAxB,SACA,cAAC1B,EAAD,MAEA,cAAC6B,EAAA,EAAD,QCTSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.69555187.chunk.js","sourcesContent":["import React from 'react'\r\nimport { AppBar, Badge, Grid, IconButton, InputBase, makeStyles, Toolbar } from '@material-ui/core'\r\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\r\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\r\nimport PowerSettingsNewIcon from '@material-ui/icons/PowerSettingsNew';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n//Styles based on https://cssinjs.org/jss-plugin-nested\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n        backgroundColor: '#FFF'\r\n    },\r\n    searchInput:{\r\n        opacity: '0.6',\r\n        padding: '0px 8px',\r\n        fontSize: '0.8rem',\r\n        '&:hover':{\r\n            backgroundColor:'#f2f2f2'\r\n        }\r\n    }\r\n});\r\n\r\nexport default function Header() {\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <AppBar position=\"static\" className={classes.root}>\r\n            <Toolbar>\r\n                <Grid container alignItems=\"center\">\r\n                    <Grid item>\r\n                        <InputBase \r\n                        placeholder=\"Search\"\r\n                        className={classes.searchInput}\r\n                        startAdornment={<SearchIcon fontSize=\"small\" />}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item sm></Grid>\r\n                    <Grid item>\r\n                        <IconButton>\r\n                            <Badge badgeContent={4} color=\"secondary\">\r\n                                <NotificationsNoneIcon fontSize=\"small\" />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <Badge badgeContent={3} color=\"primary\">\r\n                                <ChatBubbleOutlineIcon fontSize=\"small\" />\r\n                            </Badge>\r\n                        </IconButton>\r\n                        <IconButton>\r\n                            <PowerSettingsNewIcon fontSize=\"small\" />\r\n                        </IconButton>\r\n                    </Grid>\r\n                </Grid>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n","import { makeStyles, withStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\n//withStyles and makeStyles\r\n\r\nconst style = ({\r\n    sideMenu:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        position: 'absolute',\r\n        left: '0px',\r\n        width:'320px',\r\n        height:'100%',\r\n        backgroundColor:'#253053'\r\n    }\r\n})\r\n\r\n\r\nconst SideMenu = (props) => {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.sideMenu}>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(style)(SideMenu);\r\n","import { CssBaseline, makeStyles } from '@material-ui/core';\nimport React from 'react';\nimport Header from '../components/Header';\nimport SideMenu from '../components/SideMenu';\nimport './App.css';\n\nconst useStyles = makeStyles({\n  appMain: {\n    paddingLeft:'320px',\n    width:'100%'\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  return (\n    <>\n      <SideMenu />\n      <div className={classes.appMain}>\n      <Header />\n      </div>\n      <CssBaseline />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}